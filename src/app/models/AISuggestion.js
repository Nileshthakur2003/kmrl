const mongoose = require('mongoose');
const { Schema, models } = mongoose;

/**
 * @typedef {import('../types/AISuggestion').AISuggestion} AISuggestion
 */

// This schema defines the structure for the 'ai_suggestions' collection.
// It stores actionable recommendations generated by an AI system to assist
// with depot operations, such as predictive maintenance or schedule optimizations.

const relatedEntitySchema = new Schema({
  model: {
    type: String,
    required: true,
    enum: ['Trainset', 'Job', 'Schedule'],
    comment: "The name of the Mongoose model this entity refers to."
  },
  refId: {
    type: Schema.Types.Mixed, // Can be ObjectId for Job/Schedule or String for Trainset
    refPath: 'relatedEntities.model',
    required: true,
    comment: "The ID of the referenced document."
  }
}, { _id: false });

const aiSuggestionSchema = new Schema({
  // Mongoose will automatically create an _id of type ObjectId

  suggestionType: {
    type: String,
    required: true,
    enum: [
      'MAINTENANCE_PREDICTION',
      'SCHEDULING_OPTIMIZATION',
      'SLA_RISK_ALERT',
      'RESOURCE_CONFLICT'
    ],
    index: true,
    comment: "The category of the AI suggestion."
  },

  description: {
    type: String,
    required: true,
    trim: true,
    comment: "The detailed, human-readable text of the suggestion."
  },

  relatedEntities: [relatedEntitySchema],

  priority: {
    type: String,
    required: true,
    enum: ['High', 'Medium', 'Low'],
    default: 'Medium',
  },

  status: {
    type: String,
    required: true,
    enum: ['Pending', 'Acknowledged', 'Implemented', 'Dismissed'],
    default: 'Pending',
    index: true,
    comment: "The current state of the suggestion in the operational workflow."
  },

  generatedBy: {
    type: String,
    comment: "Identifier for the AI model/version that produced the suggestion (e.g., 'KMRL-Optimizer-v1.2')."
  }
}, {
  timestamps: true // Automatically adds createdAt and updatedAt
});

const AISuggestion = models.AISuggestion || mongoose.model('AISuggestion', aiSuggestionSchema);

module.exports = AISuggestion;
